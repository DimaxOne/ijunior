using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PlayerData
{
    class Program
    {
        static void Main(string[] args)
        {
            Database playersDatabase = new Database();
            playersDatabase.AddPlayer("Nick", 1, false);
            playersDatabase.AddPlayer("John", 1, false);
            playersDatabase.AddPlayer("Mark", 3, true);

            playersDatabase.Work();
        }
    }

    class Database
    {
        private List<Player> _players = new List<Player>();
        private bool _isExit = false;

        public Database()
        {
            _players = new List<Player>();
        }

        public void AddPlayer(string nickName, int level = 0, bool isBan = false)
        {
            _players.Add(new Player(nickName, level, isBan));
        }

        public void Work()
        {
            while (!_isExit)
            {
                Console.WriteLine("Возможные команды для работы с базой данных:\n1. Добавить игрока;\n2. Бан игрока по порядковому номеру" +
                    "\n3. Разбан игрока по порядковому номеру;\n4. Удаление игрока\n5. Показать всех игроков\n6. Выход" +
                    "\n Что вы хотите сделать?");
                int userInput = CheckNumber();

                switch (userInput)
                {
                    case 1:
                        Console.Write("Введите имя нового игрока: ");
                        AddPlayer(Console.ReadLine());
                        break;
                    case 2:
                        Console.Write("Введите id игрока для бана:");
                        int id = CheckNumber();
                        if (id < 0 || id > _players.Count-1)
                        {
                            Console.WriteLine("Такого игрока не существует.");
                        }
                        else
                        {
                            BanPlayer(id);
                        }
                        break;
                    case 3:
                        Console.Write("Введите id игрока для разбана:");
                        int idUnlock = CheckNumber();
                        if (idUnlock < 0 || idUnlock > _players.Count-1)
                        {
                            Console.WriteLine("Такого игрока не существует.");
                        }
                        else
                        {
                            UnbanPlayer(idUnlock);
                        }
                        break;
                    case 4:
                        Console.Write("Введите id игрока для удаления: ");
                        int idDelete = CheckNumber();
                        if (idDelete < 0 || idDelete > _players.Count-1)
                        {
                            Console.WriteLine("Такого игрока не существует.");
                        }
                        else
                        {
                            DeletePlayer(idDelete);
                        }
                        break;
                    case 5:
                        ShowAllPlayers();
                        break;
                    case 6:
                        _isExit = true;
                        break;
                    default:
                        Console.WriteLine("Введите корректную команду.");
                        break;
                }
            }
        }

        private int CheckNumber()
        {
            int number;
            while (!int.TryParse(Console.ReadLine(), out number))
            {
                Console.WriteLine("Введите корректное число.");
            }

            return number;
        }

        private void DeletePlayer(int id)
        {
            _players.RemoveAt(id);
            Console.WriteLine("Игрок удален.");
        }

        private void UnbanPlayer(int id)
        {
            if (_players[id].IsBan == true)
            {
                _players[id].Unban();
                Console.WriteLine($"Игрок с порядковым номером - {id} разбанен.");
            }
            else
            {
                Console.WriteLine("Игрок не забанен.");
            }
        }

        private void BanPlayer(int id)
        {
            if (_players[id].IsBan == false)
            {
                _players[id].Ban();
                Console.WriteLine($"Игрок с порядковым номером - {id} забанен.");
            }
            else
            {
                Console.WriteLine("Игрок уже забанен.");
            }
        }

        private void ShowAllPlayers()
        {
            for (int i = 0; i < _players.Count; i++)
            {
                Console.WriteLine($"{i}. Ник - {_players[i].NickName}, уровень - {_players[i].Level}, статус бана - " +
                    $"{_players[i].IsBan}");
            }
        }
    }

    class Player
    {
        public string NickName { get; private set; }
        public int Level { get; private set; }
        public bool IsBan { get; private set; }

        public Player(string nickName, int level, bool isBan)
        {
            NickName = nickName;
            Level = level;
            IsBan = isBan;
        }

        public void Ban()
        {
            IsBan = true;
        }

        public void Unban()
        {
            IsBan = false;
        }
    }
}
